buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
		}
    }
}

apply plugin: 'forge'
apply plugin: 'checkstyle'

version = "dev.0.1." + getBuildNumber()
group= "com.mcgoodtime.gti"
archivesBaseName = "gti"

repositories {
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}

dependencies {
    compile 'net.industrial-craft:industrialcraft-2:2.2.719-experimental:dev' //adds newest ic2 to the dev env
    checkstyle 'com.puppycrawl.tools:checkstyle:6.5'
	changeBuildNumber()
}

minecraft {
    version = "1.7.10-10.13.3.1401-1710ls"
    runDir = "eclipse"
}

configurations { 
     api 
     compile.extendsFrom api 
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from (sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version' : project.version, 'mcversion' : project.minecraft.version
    }
    from (sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

checkstyle {
    configFile = file('checkstyle.xml')
    configProperties = [
            "name" : 'GoodTime-Industrial',
            "organization" : 'Minecraft-GoodTime',
            "url" : 'https://github.com/Minecraft-GoodTime/GoodTime-Industrial',
            "year" : '2015',
            "basedir": project.projectDir,
            "severity": 'warning'
    ]
}

def getBuildNumber() {
	//return "$System.env.BUILD_NUMBER" != "null" ? "$System.env.BUILD_NUMBER" : "0"
	return 1
}

def changeBuildNumber() {
	File file = new File("./src/main/resources/mcmod.info");
	String mcmodinfo = file.getText().replace("{BUILD_NUM}", getBuildNumber().toString());
	System.out.println(mcmodinfo);
	try {
			FileOutputStream fos = new FileOutputStream(file);
			OutputStreamWriter osw = new OutputStreamWriter(fos , "UTF-8");
			BufferedWriter bw = new BufferedWriter(osw);
			bw.write(mcmodinfo);
			
			bw.close();
			osw.close();
			fos.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	
	
}

tasks.jar.dependsOn "check"
